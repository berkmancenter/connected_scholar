<% content_for :head do %>
  <!-- stylesheets -->
  <link href="/static/css/pad.css" rel="stylesheet" />
  <%= render :partial => 'pad_js'%>
  <%= javascript_include_tag '/js/jquery.contextmenu.js'%>
  <style type="text/css" title="dynamicsyntax"></style>

  <script type="text/javascript">

    $(function(){
	  setupDraggables();
    });

	function setupDraggables(){
		$(".draggable").draggable({zIndex: 100, helper: 'clone', handle: "p", appendTo: 'body', iframeFix: true, start: startDrag });
	}
	function startDrag(event,ui){
      $(ui.helper).prepend('<div class="preDrag"></div>');
      $(this).data('draggable').offset.click.top += 36;
      setupDropzone();
    }

    function setupDropzone(){
	  var win = window.parent.frames[1].frames[0].window;
      var doc = window.parent.frames[1].frames[0].document;
      var innerdocbody = $(doc).find("#innerdocbody");
      var allmagic = innerdocbody.find('div[id^="magicdomid"]');
      allmagic.droppable({
	    hoverClass: 'custom-hover',
        drop: function(event, ui){
          var target = $(event.target);
          if(target.prev() != undefined && target.prev().attr("id") != undefined && target.prev().attr("id").match(/^magicdomid/)){
            target = target.prev();
          }
          var node = doc.getElementById(target.attr("id"));
          target.focus(function() {
            window.setTimeout(function() {
              setCursorPosition(0, node, doc, win);
            }, 0);
          });
          //create the new line after drop target
		  resource_id = ui.draggable.attr("id").replace("drag_resource_", "");
		  document_id = "<%= @document.id %>";
      setCitation(document_id, resource_id, target);
      return true;
        }
      });
    }

    function setCursorPosition(pos, node, doc, win){
        var sel, range;
        if (win.getSelection && doc.createRange) {
          range = doc.createRange();
          range.selectNode(node);
          range.setStart(node, pos);
          range.setEnd(node, pos);
          range.collapse(true);
          sel = win.getSelection();
          sel.removeAllRanges();
          sel.addRange(range);
        } else if (node.createTextRange) {
          range = node.createTextRange();
          range.collapse(true);
          range.select();
        }
    }
	
	function setCitation(document_id, resource_id, target){
		$.get("/documents/" + document_id + "/resources/" + resource_id + "/citation", function(data){
			var citation = data["citation"];
			target.after('<div>'+citation+'</div>');
      target.attr('tabindex', -1).focus();
      target.removeAttr('tabindex');
      var doc = window.parent.frames[1].frames[0].document;
			var innerdocbody = $(doc).find("#innerdocbody");
			var span = $('span:contains("'+citation+'")', innerdocbody);
			span.die('contextmenu');
			span.contextPopup({
			  title: 'Citation:  ' + citation,
			  items: [
					{ label: 'View Resource', action: function(){ alert("Citation: "+citation+"\nDocument: "+document_id+" \nResource: "+resource_id+" \nClicked!"); }}
				]
			});
		}, 'json');
		$.post("/documents/"+document_id+"/resources/"+resource_id+"/activate", function(data){
			if(data.length > 0){
				$("#resource_"+resource_id).remove();
				$("#active_sources").append(data);
			}
			setupDraggables();
		})
	}
  </script>

<% end %>

  <%= render :partial => 'pad_left'%>
  <%= render :partial => 'pad_middle'%>
  <%= render :partial => 'pad_right'%>
